<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2009 Progress Software, Inc.
  http://fusesource.com
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
     http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.fusesource.hawtjni</groupId>
    <artifactId>hawtjni-pom</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <groupId>org.fusesource.hawtjni</groupId>
  <artifactId>hawtjni-example</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>HawtJNI Example</name>
  
  <dependencies>
    <dependency>
      <groupId>org.fusesource.hawtjni</groupId>
      <artifactId>hawtjni-runtime</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.fusesource.hawtjni</groupId>
        <artifactId>maven-hawtjni-plugin</artifactId>
        <version>1.0-SNAPSHOT</version>
        <executions>
          <execution>
            <id>generate</id>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>        
      </plugin>
      
      <!-- include all the dependencies into the jar so it can run standalone -->
      <plugin>
        <groupId>org.fusesource.mvnplugins</groupId>
        <artifactId>maven-uberize-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals><goal>uberize</goal></goals>
            <configuration>
              
              <transformers>

                <!-- Make an executable jar -->
                <transformer implementation="org.fusesource.mvnplugins.uberize.transformer.ManifestEditor">
                  <manifestEntries>
                    <Main-Class>test.Platform</Main-Class>
                    <Specification-Version>${pom.version}</Specification-Version>
                    <Implementation-Version>${pom.version}</Implementation-Version>
                  </manifestEntries>
                </transformer>

              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>mac</id>
      <activation>
        <os><family>mac</family></os>
      </activation>
      <build>
        <plugins>
          
          <!-- Use the xcode project to build the jni lib -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>/usr/bin/xcodebuild</executable>
                  <workingDirectory>${basedir}</workingDirectory>
                  <arguments>
                    <argument>-project</argument>
                    <argument>${project.artifactId}-osx.xcodeproj</argument>
                    <argument>-target</argument>
                    <argument>jnilib</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <!-- Copy the jni lib in as a resource of the jar (so that the jar can extract the lib) -->
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.4.1</version>
            <executions>
              <execution>
                <id>copy-jni-libs</id>
                <phase>process-test-sources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/target/classes</outputDirectory>
                  <resources>          
                    <resource>
                      <directory>target/xcode/release</directory>
                      <includes>
                        <include>*.jnilib</include>
                      </includes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>              
                </configuration>            
              </execution>
            </executions>
          </plugin>
          
        </plugins>
      </build>
    </profile>
  </profiles>
  
</project>
